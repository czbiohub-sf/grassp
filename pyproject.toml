[project]
name =  "some_package"
description = "Example Python package repo"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.7, <4.0"

# the dynamically determined project metadata attributes
dynamic = ["version"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]

# list package dependencies here
dependencies = [
    "numpy",
    "pandas",
    "requests",
]


[project.optional-dependencies]
# note that dev dependencies are only pinned to major versions
dev = [
    "black~=22.3",
    "flake8~=5.0",
    "isort~=5.10",
    "pre-commit~=2.19",
    "pylint~=2.14",
    "pytest~=7.1",
]
notebook = [
    "jupyterlab",
    "matplotlib",
]


[project.scripts]
some-cli = "some_package.cli.some_cli:main"


[project.urls]
homepage = "https://github.com/czbiohub/some-package"
documentation = "https://github.com/czbiohub/some-package"
repository = "https://github.com/czbiohub/some-package"


[build-system]
requires = ["setuptools", "setuptools-scm"]
xsbuild-backend = "setuptools.build_meta"


[tool.setuptools]
# explicitly specify the package name
# TODO: is there a better way to do this?
packages = ["some_package"]

# allow use of __file__ to load data files included in the package
zip-safe = false


[tool.black]
line-length = 95
target-version = ['py38', 'py38', 'py39', 'py310']
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | notebooks
    | ignore
  )/
  | some/specific/module.py
)
'''


[tool.isort]
profile = "black"
line_length = 95
lines_between_types = 1
default_section = "THIRDPARTY"
no_lines_before = ["STDLIB",]
ensure_newline_before_comments = true


[tool.mypy]
show_error_codes = true
check_untyped_defs = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true


[tool.pylint]
# disable all conventions, refactors, warnings (C, R, W) and the following:
# E0401: unable-to-import (since it is possible that no one environment has all required packages)
# E1136: unsubscriptable-object (anecdotal false positives for numpy objects)
disable = ["C", "R", "W", "unsubscriptable-object", "import-error"]
msg-template = "{line},{column},{category},{symbol}:{msg}"
reports = "n"


[tool.pytest.ini_options]
log_cli = false
